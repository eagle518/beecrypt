Welcome to the BeeCrypt crypto library!

Copyright (c) 1997, 1998, 1999, 2000, 2001 Virtual Unlimited B.V.

Author: Bob Deblier <bob@virtualunlimited.com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

For the specifics of this license, see file 'COPYING', included in this
distribution.



Welcome to version two of BeeCrypt:

As you can see from the entries in the NEWS file, quite a lot has been added
and certain parts of the API have been changed.

The library should now be easier to compile on untested systems, since its
detection of entropy devices has been changed.

The multi-precision integer routines are now fully multithread-safe, which
should benefit any programmer using threads.

As usual, your comments are welcome.



About BeeCrypt:

This library is an ongoing project of Virtual Unlimited B.V. Its goal is to
provide strong and fast cryptography for use by our products, but we're
not limiting the use to that. We're releasing it under the LGPL license,
because we feel that cryptography should be open to inspection by everybody,
and available for use by everybody to safeguard privacy.

Note that depending on where you are, the use of cryptography may be limited
or forbidden by law. Before using this library, make sure you are legally
entitled to do so.



For more on Virtual Unlimited B.V. and our products please consult our website:

http://www.virtualunlimited.com



<plug>
Most of the algorithms are implemented from reliable sources such as:

"Handbook of Applied Cryptography"
 Alfred J. Menezes, Paul C. van Oorschot, Scott A. Vanstone
 CRC Press

"Applied Cryptography", second edition
 Bruce Schneier
 Wiley

For crypto enthusiasts these books are invaluable background material.

IEEE P1363 "Standard Specifications for Public Key Cryptography" is a very
interesting draft standard, which we will try to comply with.
</plug>

The structures in the library are geared towards exchange with Java
and its security and cryptography classes. We already have quite a number
of cryptographic classes developed in Java, which will be released in the
future in another open source project.



Included in the library are:
    - entropy sources for initializing pseudo-random generators
    - pseudo-random generators: FIPS-186, Mersenne Twister
    - block ciphers: Blowfish
    - hash functions: MD5, SHA-1, SHA-256
    - keyed hash functions: MD5/HMAC, SHA-1/HMAC, SHA-256/HMAC
    - multi-precision integer library, with assembler-optimized routines
    - probabilistic primality testing, with optimized small prime trial division
    - discrete logarithm parameter generation over a prime field
    - Diffie-Hellman key agreement
    - ElGamal signature scheme (two variants)
	- RSA keypair generation with chinese remainder theorem variables
	- RSA public & private key operations
	- DHAES encryption scheme

Planned for the near future are:
    - compliance with and compliance statements for IEEE P1363
    - DSA (i.e. the rest of FIPS-186)
    - more blockciphers (Rijndael a.k.a AES, Twofish, ... )
	- more hash functions (RIPEMD-160, SHA-384, SHA-512, HAVAL, Tiger, ... )
	- Elliptic Curves (ECDSA, ... )

The library has been tested on the following platforms:
	- FreeBSD 4.0 alpha
	- FreeBSD 4.0, 4.2 x86
		- includes assembler optimization (tuned for Pentium Pro and higher)
	- Linux glibc 2.x alpha
    - Linux glibc 2.x ppc
        - includes assembler optimization (for generic 32-bit PowerPC)
    - Linux glibc 2.x x86
        - includes assembler optimization (tuned for Pentium Pro and higher)
    - Solaris 2.6/2.7/2.8 sparc (with Workshop compilers, gnu binutils and make)
        - includes assembler optimization for ultrasparc
	- Solaris 2.7/2.8 x86 (with gnu compiler, binutils and make)
		- includes assembler optimization (tuned for Pentium Pro and higher)
	- Tru64 Unix alpha
    - Win32 (Windows 95, 98, NT 4.0, 2000)
        - includes assembler optimization (tuned for Pentium Pro and higher)

The library is currently in the process of being ported to:
	- Cygwin (I haven't figured out yet how to build the DLL)
	- Darwin (Darwin 1.2 doesn't seem to run on our PowerMac 7300/166, and 1.0.2 was flaky, so any volunteer effort would be appreciated)
	- QNX (I currently don't have a testing system anymore)



About optimizations:

The library contains optimizations for a variety of systems, some of which
are not recognized by default by the configure script. You can trigger better
optimizations on certain platforms, by adding the '--target=TYPE' option.

A few examples:

	--target=i686-pc-freebsd4.2
		will compile the library for FreeBSD/Pentium Pro with assembler optimizations

	--target=sparcv8plus-sun-solaris2.8
		will compile the library for Solaris2.8/UltraSparc with assembler optimizations

By studying the configure.in file, you may be able to figure out the best optimization setting for you platform. Experiment to find the best results. Sometimes specific optimization flags actually produce results which are a lot worse!

Consult file 'DOCUMENTATION' on how to use the library. There is also a program
called 'beetest.c' included which gives an example of how to use the API. You
can also use it to test whether your compiled library works.

If you want to report bugs, make suggestions, contribute fixes or
enhancements, please see our website: http://beecrypt.virtualunlimited.com/
or contact me at beecrypt@virtualunlimited.com

Sincerely

Bob Deblier
Virtual Unlimited
